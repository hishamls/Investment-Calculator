{"ast":null,"code":"var _jsxFileName = \"/home/hishamls/0-webProjects/ReactProjects/investment-calculator-study/__HISHAM/src/components/outputs/Outputs.js\";\nimport classes from \"./Outputs.module.css\";\n\n//CREATE A NEW OBJECT FORM Intl.NumberFormat CONSTRUCTOR\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currencyForm = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n});\nexport default function Outputs(props) {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: classes.result,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: props.data.map((yData // NOTE WRIT () INSTEAD OF {}\n      ) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: yData.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: currencyForm.format(yData.savingsEndOfYear)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: currencyForm.format(yData.yearlyInterest)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: currencyForm.format(yData.savingsEndOfYear - props.initialInvestment - yData.yearlyContribution * yData.year)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: currencyForm.format(props.initialInvestment + yData.yearlyContribution * yData.year)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, yData.year, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = Outputs;\nvar _c;\n$RefreshReg$(_c, \"Outputs\");","map":{"version":3,"names":["classes","jsxDEV","_jsxDEV","currencyForm","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","Outputs","props","className","result","children","fileName","_jsxFileName","lineNumber","columnNumber","data","map","yData","year","format","savingsEndOfYear","yearlyInterest","initialInvestment","yearlyContribution","_c","$RefreshReg$"],"sources":["/home/hishamls/0-webProjects/ReactProjects/investment-calculator-study/__HISHAM/src/components/outputs/Outputs.js"],"sourcesContent":["import classes from \"./Outputs.module.css\";\n\n//CREATE A NEW OBJECT FORM Intl.NumberFormat CONSTRUCTOR\nconst currencyForm = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport default function Outputs(props) {\n  return (\n    <table className={classes.result}>\n      <thead>\n        <tr>\n          <th>Year</th>\n          <th>Total Savings</th>\n          <th>Interest (Year)</th>\n          <th>Total Interest</th>\n          <th>Invested Capital</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {props.data.map(\n          (\n            yData // NOTE WRIT () INSTEAD OF {}\n          ) => (\n            <tr key={yData.year}>\n              <td>{yData.year}</td>\n              <td>{currencyForm.format(yData.savingsEndOfYear)}</td>\n              <td>{currencyForm.format(yData.yearlyInterest)}</td>\n              <td>\n                {currencyForm.format(\n                  yData.savingsEndOfYear -\n                    props.initialInvestment -\n                    yData.yearlyContribution * yData.year\n                )}\n              </td>\n              <td>\n                {currencyForm.format(\n                  props.initialInvestment +\n                    yData.yearlyContribution * yData.year\n                )}\n              </td>\n            </tr>\n          )\n        )}\n      </tbody>\n    </table>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}