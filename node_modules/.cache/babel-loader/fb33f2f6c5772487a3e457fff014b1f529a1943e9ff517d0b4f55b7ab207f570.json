{"ast":null,"code":"var _jsxFileName = \"/home/hishamls/0-webProjects/ReactProjects/investment-calculator-study/__HISHAM/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Header from \"./components/header/Header\";\nimport Inputs from \"./components/inputs/Inputs\";\nimport Outputs from \"./components/outputs/Outputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst yearlyData = [];\nfunction App() {\n  _s();\n  const [inputsState, setInputsState] = useState(\"\");\n  const calculateHandler = userInput => {\n    setInputsState(...userInput);\n  };\n  if (inputsState) {\n    let currentSavings = +inputsState[\"currSave\"];\n    const yearlyContribution = +inputsState.yearSave;\n    const expectedReturn = +inputsState.expSave / 100;\n    const duration = +inputsState[\"durSave\"];\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outputs, {\n      data: yearlyData,\n      intInv: inputsState.currSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"foX22uxTF9YFPRn8aWdkqeqJyd0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","Inputs","Outputs","jsxDEV","_jsxDEV","Fragment","_Fragment","yearlyData","App","_s","inputsState","setInputsState","calculateHandler","userInput","currentSavings","yearlyContribution","yearSave","expectedReturn","expSave","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","data","intInv","currSave","_c","$RefreshReg$"],"sources":["/home/hishamls/0-webProjects/ReactProjects/investment-calculator-study/__HISHAM/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Header from \"./components/header/Header\";\nimport Inputs from \"./components/inputs/Inputs\";\nimport Outputs from \"./components/outputs/Outputs\";\nconst yearlyData = [];\n\nfunction App() {\n  const [inputsState, setInputsState] = useState(\"\");\n\n  const calculateHandler = (userInput) => {\n    setInputsState(...userInput);\n  };\n\n  if (inputsState) {\n    let currentSavings = +inputsState[\"currSave\"];\n    const yearlyContribution = +inputsState.yearSave;\n    const expectedReturn = +inputsState.expSave / 100;\n    const duration = +inputsState[\"durSave\"];\n\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n  }\n\n  return (\n    <>\n      <Header />\n      <Inputs onCalculate={calculateHandler} />\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n      <Outputs data={yearlyData} intInv={inputsState.currSave} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,OAAO,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACnD,MAAMC,UAAU,GAAG,EAAE;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMa,gBAAgB,GAAIC,SAAS,IAAK;IACtCF,cAAc,CAAC,GAAGE,SAAS,CAAC;EAC9B,CAAC;EAED,IAAIH,WAAW,EAAE;IACf,IAAII,cAAc,GAAG,CAACJ,WAAW,CAAC,UAAU,CAAC;IAC7C,MAAMK,kBAAkB,GAAG,CAACL,WAAW,CAACM,QAAQ;IAChD,MAAMC,cAAc,GAAG,CAACP,WAAW,CAACQ,OAAO,GAAG,GAAG;IACjD,MAAMC,QAAQ,GAAG,CAACT,WAAW,CAAC,SAAS,CAAC;IAExC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGP,cAAc,GAAGG,cAAc;MACtDH,cAAc,IAAIO,cAAc,GAAGN,kBAAkB;MACrDR,UAAU,CAACe,IAAI,CAAC;QACdC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAEV,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;EACF;EAEA,oBACEX,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA,CAACJ,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzB,OAAA,CAACH,MAAM;MAAC6B,WAAW,EAAElB;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGzCzB,OAAA,CAACF,OAAO;MAAC6B,IAAI,EAAExB,UAAW;MAACyB,MAAM,EAAEtB,WAAW,CAACuB;IAAS;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC3D,CAAC;AAEP;AAACpB,EAAA,CAlCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}