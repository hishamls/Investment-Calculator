{"ast":null,"code":"var _jsxFileName = \"/home/hishamls/0-webProjects/ReactProjects/investment-calculator-study/__HISHAM/src/App.js\";\nimport { useState } from \"react\";\nimport Header from \"./components/header/Header\";\nimport Inputs from \"./components/inputs/Inputs\";\nimport Outputs from \"./components/outputs/Outputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n    // const [state, setState] = useState(\"\");\n    const yearlyData = []; // per-year results\n    if (userInput) {\n      // let currentSavings = +userInput[\"current-savings\"]; // feel free to change the shape of this input object!\n      let currentSavings = +userInput[\"currSave\"]; // feel free to change the shape of this input object!\n      const yearlyContribution = +userInput.yearSave; // as mentioned: feel free to change the shape...\n      const expectedReturn = +userInput.expSave / 100;\n      const duration = +userInput[\"durSave\"];\n\n      // The below code calculates yearly results (total savings, interest etc)\n      for (let i = 0; i < duration; i++) {\n        const yearlyInterest = currentSavings * expectedReturn;\n        currentSavings += yearlyInterest + yearlyContribution;\n        yearlyData.push({\n          // feel free to change the shape of the data pushed to the array!\n          year: i + 1,\n          yearlyInterest: yearlyInterest,\n          savingsEndOfYear: currentSavings,\n          yearlyContribution: yearlyContribution\n        });\n      }\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outputs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","Inputs","Outputs","jsxDEV","_jsxDEV","Fragment","_Fragment","App","calculateHandler","userInput","yearlyData","currentSavings","yearlyContribution","yearSave","expectedReturn","expSave","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","_c","$RefreshReg$"],"sources":["/home/hishamls/0-webProjects/ReactProjects/investment-calculator-study/__HISHAM/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Header from \"./components/header/Header\";\nimport Inputs from \"./components/inputs/Inputs\";\nimport Outputs from \"./components/outputs/Outputs\";\n\nfunction App() {\n  const calculateHandler = (userInput) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n    // const [state, setState] = useState(\"\");\n    const yearlyData = []; // per-year results\n    if (userInput) {\n      // let currentSavings = +userInput[\"current-savings\"]; // feel free to change the shape of this input object!\n      let currentSavings = +userInput[\"currSave\"]; // feel free to change the shape of this input object!\n      const yearlyContribution = +userInput.yearSave; // as mentioned: feel free to change the shape...\n      const expectedReturn = +userInput.expSave / 100;\n      const duration = +userInput[\"durSave\"];\n\n      // The below code calculates yearly results (total savings, interest etc)\n      for (let i = 0; i < duration; i++) {\n        const yearlyInterest = currentSavings * expectedReturn;\n        currentSavings += yearlyInterest + yearlyContribution;\n        yearlyData.push({\n          // feel free to change the shape of the data pushed to the array!\n          year: i + 1,\n          yearlyInterest: yearlyInterest,\n          savingsEndOfYear: currentSavings,\n          yearlyContribution: yearlyContribution,\n        });\n      }\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return (\n    <>\n      <Header />\n\n      <Inputs onCalculate={calculateHandler} />\n\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n      <Outputs />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,OAAO,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IACtC;IACA;IACA;IACA,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;IACvB,IAAID,SAAS,EAAE;MACb;MACA,IAAIE,cAAc,GAAG,CAACF,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;MAC7C,MAAMG,kBAAkB,GAAG,CAACH,SAAS,CAACI,QAAQ,CAAC,CAAC;MAChD,MAAMC,cAAc,GAAG,CAACL,SAAS,CAACM,OAAO,GAAG,GAAG;MAC/C,MAAMC,QAAQ,GAAG,CAACP,SAAS,CAAC,SAAS,CAAC;;MAEtC;MACA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;QACjC,MAAMC,cAAc,GAAGP,cAAc,GAAGG,cAAc;QACtDH,cAAc,IAAIO,cAAc,GAAGN,kBAAkB;QACrDF,UAAU,CAACS,IAAI,CAAC;UACd;UACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;UACXC,cAAc,EAAEA,cAAc;UAC9BG,gBAAgB,EAAEV,cAAc;UAChCC,kBAAkB,EAAEA;QACtB,CAAC,CAAC;MACJ;IACF;;IAEA;EACF,CAAC;;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA,CAACJ,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVtB,OAAA,CAACH,MAAM;MAAC0B,WAAW,EAAEnB;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAKzCtB,OAAA,CAACF,OAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACX,CAAC;AAEP;AAACE,EAAA,GA1CQrB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}